import{A as v,U as o,S as w,b as E,f as m,G as N,c as U,m as A,C as g,g as p,l as O,d as I,a as F,F as M}from"./metadataWorker-rKmvznKw.js";import{A as x}from"./AbstractID3Parser-BMtZ8hwB.js";class l{static fromBase64(t){return l.fromBuffer(Uint8Array.from(atob(t),e=>e.charCodeAt(0)))}static fromBuffer(t){return new l(t.length).get(t,0)}constructor(t){this.len=t}get(t,e){const r=v[o.get(t,e)];e+=4;const s=o.get(t,e);e+=4;const i=new w(s,"utf-8").get(t,e);e+=s;const n=o.get(t,e);e+=4;const T=new w(n,"utf-8").get(t,e);e+=n;const C=o.get(t,e);e+=4;const P=o.get(t,e);e+=4;const L=o.get(t,e);e+=4;const b=o.get(t,e);e+=4;const z=o.get(t,e);e+=4;const R=t.slice(e,e+z);return{type:r,format:i,description:T,width:C,height:P,colour_depth:L,indexed_color:b,data:R}}}const d={len:7,get:(a,t)=>({packetType:E.get(a,t),vorbis:new w(6,"ascii").get(a,t+1)})},_={len:23,get:(a,t)=>({version:m.get(a,t+0),channelMode:E.get(a,t+4),sampleRate:m.get(a,t+5),bitrateMax:m.get(a,t+9),bitrateNominal:m.get(a,t+13),bitrateMin:m.get(a,t+17)})};class B{constructor(t,e){this.data=t,this.offset=e}readInt32(){const t=m.get(this.data,this.offset);return this.offset+=4,t}readStringUtf8(){const t=this.readInt32(),e=N(this.data.subarray(this.offset,this.offset+t),"utf-8");return this.offset+=t,e}parseUserComment(){const t=this.offset,e=this.readStringUtf8(),r=e.indexOf("=");return{key:e.substring(0,r).toUpperCase(),value:e.substring(r+1),len:this.offset-t}}}const h=U("music-metadata:parser:ogg:vorbis1");class y extends A("Vorbis"){}class u{constructor(t,e){this.pageSegments=[],this.durationOnLastPage=!0,this.metadata=t,this.options=e}async parsePage(t,e){if(this.lastPageHeader=t,t.headerType.firstPage)this.parseFirstPage(t,e);else{if(t.headerType.continued){if(this.pageSegments.length===0)throw new y("Cannot continue on previous page");this.pageSegments.push(e)}if(t.headerType.lastPage||!t.headerType.continued){if(this.pageSegments.length>0){const r=u.mergeUint8Arrays(this.pageSegments);await this.parseFullPage(r)}this.pageSegments=t.headerType.lastPage?[]:[e]}}}static mergeUint8Arrays(t){const e=t.reduce((s,i)=>s+i.length,0),r=new Uint8Array(e);return t.forEach((s,i,n)=>{const T=n.slice(0,i).reduce((C,P)=>C+P.length,0);r.set(s,T)}),r}async flush(){await this.parseFullPage(u.mergeUint8Arrays(this.pageSegments))}async parseUserComment(t,e){const s=new B(t,e).parseUserComment();return await this.addTag(s.key,s.value),s.len}async addTag(t,e){if(t==="METADATA_BLOCK_PICTURE"&&typeof e=="string"){if(this.options.skipCovers){h("Ignore picture");return}e=l.fromBase64(e),h(`Push picture: id=${t}, format=${e.format}`)}else h(`Push tag: id=${t}, value=${e}`);await this.metadata.addTag("vorbis",t,e)}calculateDuration(){this.lastPageHeader&&this.metadata.format.sampleRate&&this.lastPageHeader.absoluteGranulePosition>=0&&(this.metadata.setFormat("numberOfSamples",this.lastPageHeader.absoluteGranulePosition),this.metadata.setFormat("duration",this.lastPageHeader.absoluteGranulePosition/this.metadata.format.sampleRate))}parseFirstPage(t,e){this.metadata.setFormat("codec","Vorbis I"),this.metadata.setFormat("hasAudio",!0),h("Parse first page");const r=d.get(e,0);if(r.vorbis!=="vorbis")throw new y("Metadata does not look like Vorbis");if(r.packetType===1){const s=_.get(e,d.len);this.metadata.setFormat("sampleRate",s.sampleRate),this.metadata.setFormat("bitrate",s.bitrateNominal),this.metadata.setFormat("numberOfChannels",s.channelMode),h("sample-rate=%s[hz], bitrate=%s[b/s], channel-mode=%s",s.sampleRate,s.bitrateNominal,s.channelMode)}else throw new y("First Ogg page should be type 1: the identification header")}async parseFullPage(t){const e=d.get(t,0);switch(h("Parse full page: type=%s, byteLength=%s",e.packetType,t.byteLength),e.packetType){case 3:return this.parseUserCommentList(t,d.len)}}async parseUserCommentList(t,e){const r=m.get(t,e);e+=4,e+=r;let s=m.get(t,e);for(e+=4;s-- >0;)e+=await this.parseUserComment(t,e)}}const c={STREAMINFO:0,PADDING:1,APPLICATION:2,SEEKTABLE:3,VORBIS_COMMENT:4,CUESHEET:5,PICTURE:6},D={len:4,get:(a,t)=>({lastBlock:O(a,t,7),type:p(a,t,1,7),length:g.get(a,t+1)})},k={len:34,get:(a,t)=>({minimumBlockSize:F.get(a,t),maximumBlockSize:F.get(a,t+2)/1e3,minimumFrameSize:g.get(a,t+4),maximumFrameSize:g.get(a,t+7),sampleRate:g.get(a,t+10)>>4,channels:p(a,t+12,4,3)+1,bitsPerSample:p(a,t+12,7,5)+1,totalSamples:p(a,t+13,4,36),fileMD5:new I(16).get(a,t+18)})},$=U("music-metadata:parser:FLAC");class S extends A("FLAC"){}class H extends x{constructor(){super(...arguments),this.vorbisParser=new u(this.metadata,this.options),this.padding=0}async postId3v2Parse(){if((await this.tokenizer.readToken(M)).toString()!=="fLaC")throw new S("Invalid FLAC preamble");let e;do e=await this.tokenizer.readToken(D),await this.parseDataBlock(e);while(!e.lastBlock);if(this.tokenizer.fileInfo.size&&this.metadata.format.duration){const r=this.tokenizer.fileInfo.size-this.tokenizer.position;this.metadata.setFormat("bitrate",8*r/this.metadata.format.duration)}}async parseDataBlock(t){switch($(`blockHeader type=${t.type}, length=${t.length}`),t.type){case c.STREAMINFO:return this.readBlockStreamInfo(t.length);case c.PADDING:this.padding+=t.length;break;case c.APPLICATION:break;case c.SEEKTABLE:break;case c.VORBIS_COMMENT:return this.readComment(t.length);case c.CUESHEET:break;case c.PICTURE:await this.parsePicture(t.length);return;default:this.metadata.addWarning(`Unknown block type: ${t.type}`)}return this.tokenizer.ignore(t.length).then()}async readBlockStreamInfo(t){if(t!==k.len)throw new S("Unexpected block-stream-info length");const e=await this.tokenizer.readToken(k);this.metadata.setFormat("container","FLAC"),this.processsStreamInfo(e)}processsStreamInfo(t){this.metadata.setFormat("codec","FLAC"),this.metadata.setFormat("hasAudio",!0),this.metadata.setFormat("lossless",!0),this.metadata.setFormat("numberOfChannels",t.channels),this.metadata.setFormat("bitsPerSample",t.bitsPerSample),this.metadata.setFormat("sampleRate",t.sampleRate),t.totalSamples>0&&this.metadata.setFormat("duration",t.totalSamples/t.sampleRate)}async readComment(t){const e=await this.tokenizer.readToken(new I(t));return this.parseComment(e)}async parseComment(t){const e=new B(t,0),r=e.readStringUtf8();r.length>0&&this.metadata.setFormat("tool",r);const s=e.readInt32(),i=new Array(s);for(let n=0;n<s;n++)i[n]=e.parseUserComment();await Promise.all(i.map(n=>(n.key==="ENCODER"&&this.metadata.setFormat("tool",n.value),this.addTag(n.key,n.value))))}async parsePicture(t){return this.options.skipCovers?this.tokenizer.ignore(t):this.addPictureTag(await this.tokenizer.readToken(new l(t)))}addPictureTag(t){return this.addTag("METADATA_BLOCK_PICTURE",t)}addTag(t,e){return this.vorbisParser.addTag(t,e)}}var K=Object.freeze({__proto__:null,FlacParser:H});export{D as B,H as F,u as V,c as a,l as b,k as c,K as d};
//# sourceMappingURL=FlacParser-6S_-YEty.js.map
